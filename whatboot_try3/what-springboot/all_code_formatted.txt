Extracted Files:

Filename: "CrudApplicationTests.java"
```java
package learn.springboot.whatspringboot;

import org.junit.jupiter.api.Test;
import org.springframework.boot.test.context.SpringBootTest;

@SpringBootTest
class CrudApplicationTests {

	@Test
	void contextLoads() {
	}

}

```

Filename: "CrudApplicationV14.java"
```java
package learn.springboot.whatspringboot;

import learn.springboot.whatspringboot.v13.dao.StudentDAO;
import learn.springboot.whatspringboot.v13.dto.CustomerData;
import learn.springboot.whatspringboot.v13.entity.Student;
import learn.springboot.whatspringboot.v13.service.CustomerService;
import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.PropertySource;

@SpringBootApplication(scanBasePackages = { "learn.springboot.whatspringboot.v14", "learn.springboot.whatspringboot.util"} )
@PropertySource("classpath:v14.properties")
public class CrudApplicationV14 {

	public static void main(String[] args) {
		SpringApplication.run(CrudApplicationV14.class, args);
	}



	@Bean
	public CommandLineRunner CommandLineRunner(StudentDAO theStudentDAO, CustomerService theCustomerDAO)  {  //(String[] args) {
		return  runner -> {
			System.out.println("------V13---------Hello World ; CommandLineRunner ");

		};
	}


	private void createDummyStudents(StudentDAO dao) {

		Student temp1 = new Student("aby", "Koe", "aby@gmail.com");
		Student temp2 = new Student("Kushi", "Koe", "Kushi@gmail.com");
		Student temp3 = new Student("Babu", "Drona", "babu@gmail.com");
		Student temp4 = new Student("Kuyil", "Drona", "aby@gmail.com");

		dao.save(temp1);
		dao.save(temp2);
		dao.save(temp3);
		dao.save(temp4);
		
	}

	private void createDummyCustomer(CustomerService dao) {

		CustomerData temp1 = new CustomerData(1L,"aby", "Koe", "aby@gmail.com");
		CustomerData temp2 = new CustomerData(2L,"Kushi", "Koe", "Kushi@gmail.com");
		CustomerData temp3 = new CustomerData(3L,"Babu", "Drona", "babu@gmail.com");
		CustomerData temp4 = new CustomerData(4L,"Kuyil", "Drona", "aby@gmail.com");

		dao.save(temp1);
		dao.save(temp2);
		dao.save(temp3);
		dao.save(temp4);

	}

}

```

Filename: "BasicApplicationV02jdbc.java"
```java
package learn.springboot.whatspringboot;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration;
import org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration;
import org.springframework.context.annotation.PropertySource;


@SpringBootApplication(
		scanBasePackages = { "learn.springboot.whatspringboot.v12"} ,
		exclude = { DataSourceAutoConfiguration.class, JpaRepositoriesAutoConfiguration.class }

)
@PropertySource("classpath:v12.properties")
public class BasicApplicationV02jdbc {
	public BasicApplicationV02jdbc() {
		System.out.println("--------v12--------------");
	}

	public static void main(String[] args) {
		SpringApplication.run(BasicApplicationV02jdbc.class, args);
	}





}

```

Filename: "CrudApplicationV13Jpa.java"
```java
package learn.springboot.whatspringboot;

import learn.springboot.whatspringboot.v13.dao.StudentDAO;
import learn.springboot.whatspringboot.v13.dto.CustomerData;
import learn.springboot.whatspringboot.v13.entity.Student;
import learn.springboot.whatspringboot.v13.service.CustomerService;
import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.PropertySource;

@SpringBootApplication(scanBasePackages = { "learn.springboot.whatspringboot.v13"} )
@PropertySource("classpath:v13.properties")
public class CrudApplicationV13Jpa {

	public static void main(String[] args) {
		SpringApplication.run(CrudApplicationV13Jpa.class, args);
	}



	@Bean
	public CommandLineRunner CommandLineRunner(StudentDAO theStudentDAO, CustomerService theCustomerDAO)  {  //(String[] args) {
		return  runner -> {
			System.out.println("------V13---------Hello World ; CommandLineRunner ");

		};
	}


	private void createDummyStudents(StudentDAO dao) {

		Student temp1 = new Student("aby", "Koe", "aby@gmail.com");
		Student temp2 = new Student("Kushi", "Koe", "Kushi@gmail.com");
		Student temp3 = new Student("Babu", "Drona", "babu@gmail.com");
		Student temp4 = new Student("Kuyil", "Drona", "aby@gmail.com");

		dao.save(temp1);
		dao.save(temp2);
		dao.save(temp3);
		dao.save(temp4);
		
	}

	private void createDummyCustomer(CustomerService dao) {

		CustomerData temp1 = new CustomerData(1L,"aby", "Koe", "aby@gmail.com");
		CustomerData temp2 = new CustomerData(2L,"Kushi", "Koe", "Kushi@gmail.com");
		CustomerData temp3 = new CustomerData(3L,"Babu", "Drona", "babu@gmail.com");
		CustomerData temp4 = new CustomerData(4L,"Kuyil", "Drona", "aby@gmail.com");

		dao.save(temp1);
		dao.save(temp2);
		dao.save(temp3);
		dao.save(temp4);

	}

}

```

Filename: "BasicApplicationV12rest.java"
```java
package learn.springboot.whatspringboot;

import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration;
import org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration;
import org.springframework.context.annotation.PropertySource;
import org.springframework.boot.SpringApplication;



@SpringBootApplication(
		scanBasePackages = { "learn.springboot.whatspringboot.v12"} ,
		exclude = { DataSourceAutoConfiguration.class, JpaRepositoriesAutoConfiguration.class }

)
@PropertySource("classpath:v12.properties")
public class BasicApplicationV12rest {
	public BasicApplicationV12rest() {
		System.out.println("--------v12--------------");
	}

	public static void main(String[] args) {
		SpringApplication.run(BasicApplicationV12rest.class, args);
	}





}

```

Filename: "TrackCoach.java"
```java
package learn.springboot.whatspringboot.v12.serviceImpl;

import learn.springboot.whatspringboot.v12.service.Coach;
import org.springframework.context.annotation.Lazy;
import org.springframework.stereotype.Component;

@Component
@Lazy
public class TrackCoach implements Coach {


    @Override
    public String getDailyWorkout() {
        return "Practice 7hr Daily in Round Ground";
    }



}

```

Filename: "BaseballCoach.java"
```java
package learn.springboot.whatspringboot.v12.serviceImpl;

import learn.springboot.whatspringboot.v12.service.Coach;
import org.springframework.beans.factory.config.ConfigurableBeanFactory;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Component;

@Component
@Scope(ConfigurableBeanFactory.SCOPE_PROTOTYPE)
public class BaseballCoach implements Coach {


    @Override
    public String getDailyWorkout() {
        return "Practice 2hr Daily in BALL";
    }


}

```

Filename: "CricketCoach.java"
```java
package learn.springboot.whatspringboot.v12.serviceImpl;

import learn.springboot.whatspringboot.v12.service.Coach;
import org.springframework.context.annotation.Primary;
import org.springframework.stereotype.Component;

@Component
public class CricketCoach implements Coach {


    @Override
    public String getDailyWorkout() {
        return "Practice 5hr Daily using bat";
    }

}

```

Filename: "SwimCoach.java"
```java
package learn.springboot.whatspringboot.v12.serviceImpl;

import learn.springboot.whatspringboot.v12.service.Coach;


public class SwimCoach implements Coach {



    @Override
    public String getDailyWorkout() {
        return "-------------------------Swim 1 hr";
    }

}

```

Filename: "SportsController.java"
```java
package learn.springboot.whatspringboot.v12.web;

import learn.springboot.whatspringboot.v12.service.Coach;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
@RequestMapping("/sports")
public class SportsController {

    private final Coach myCoach;

    @Autowired
    public SportsController(Coach myCoach) {
        this.myCoach=myCoach;
    }

    @GetMapping("/dailyworkout")
    public String getDailyWorkout() {
        return myCoach.getDailyWorkout();
    }


}

```

Filename: "Coach.java"
```java
package learn.springboot.whatspringboot.v12.service;

public interface Coach {

    String getDailyWorkout();

}

```

Filename: "SportConfig.java"
```java
package learn.springboot.whatspringboot.v12.config;

import learn.springboot.whatspringboot.v12.service.Coach;
import learn.springboot.whatspringboot.v12.serviceImpl.SwimCoach;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Primary;

@Configuration
public class SportConfig {

    @Bean
    @Primary
    public Coach mySwimCoach() {
        return new SwimCoach();
    }
}

```

Filename: "CustomerServiceImpl.java"
```java
package learn.springboot.whatspringboot.v13.serviceImpl;


import learn.springboot.whatspringboot.v13.dao.CustomerRepository;
import learn.springboot.whatspringboot.v13.dto.CustomerData;
import learn.springboot.whatspringboot.v13.entity.Customer;
import learn.springboot.whatspringboot.v13.util.CustomerDataUtil;
import learn.springboot.whatspringboot.v13.service.CustomerService;
import org.springframework.beans.factory.annotation.*;
import org.springframework.stereotype.Service;

import java.util.*;

@Service("customerService")
public class CustomerServiceImpl implements CustomerService {


    @Autowired
    private CustomerRepository myDataSource;

    @Autowired
    private CustomerDataUtil util;


    @Override
    public CustomerData save(CustomerData customer) {
        Customer customerModel = util.populateCustomerEntity(customer);
        return util.populateCustomerData(myDataSource.save(customerModel));
    }



    @Override
    public List <CustomerData> getAllCustomers() {
        List < CustomerData > customers = new ArrayList < > ();
        List <Customer> customerList = myDataSource.findAll();
        customerList.forEach(customer -> {
                customers.add(util.populateCustomerData(customer));
        });
        return customers;
    }


}

```

Filename: "CustomerDataUtil.java"
```java
package learn.springboot.whatspringboot.v13.util;

import learn.springboot.whatspringboot.v13.dto.CustomerData;
import learn.springboot.whatspringboot.v13.entity.Customer;
import org.springframework.context.annotation.Bean;
import org.springframework.stereotype.Component;

@Component
public class CustomerDataUtil {


    public CustomerData populateCustomerData(final Customer customer) {
        CustomerData customerData = new CustomerData();
        customerData.setId(customer.getId());
        customerData.setFirstName(customer.getFirstName());
        customerData.setLastName(customer.getLastName());
        customerData.setEmail(customer.getEmail());
        return customerData;
    }

    public Customer populateCustomerEntity(CustomerData customerData) {
        Customer customer = new Customer();
        customer.setFirstName(customerData.getFirstName());
        customer.setLastName(customerData.getLastName());
        customer.setEmail(customerData.getEmail());
        return customer;
    }


}

```

Filename: "Customer.java"
```java
package learn.springboot.whatspringboot.v13.entity;


import jakarta.persistence.*;

@Entity
public class Customer {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    private String firstName;
    private String lastName;
    private String email;

    public Customer() {
    }




    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getFirstName() {
        return firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    public String getLastName() {
        return lastName;
    }

    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }
}
```

Filename: "Student.java"
```java
package learn.springboot.whatspringboot.v13.entity;


import jakarta.persistence.*;


@Entity
@Table(name = "student")
public class Student {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private int id;
    
    @Column(name = "first_name")
    private  String firstName;

    @Column(name = "last_name")
    private  String lastName;

    @Column(name = "email")
    private  String email;


    public Student(String firstName, String lastName, String email) {
        this.firstName = firstName;
        this.lastName = lastName;
        this.email = email;
    }
    public Student(){}



    public int getId() {
        return id;
    }

    public String getFirstName() {
        return firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    public String getLastName() {
        return lastName;
    }

    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }


    @Override
    public String toString() {
        return "Student{" +
                "id=" + id +
                ", firstName='" + firstName + '\'' +
                ", lastName='" + lastName + '\'' +
                ", email='" + email + '\'' +
                '}';
    }
}

```

Filename: "CustomerData.java"
```java
package learn.springboot.whatspringboot.v13.dto;


public class CustomerData {

    private Long id;
    private String firstName;
    private String lastName;
    private String email;

    public CustomerData() {
    }

    public CustomerData(Long id, String firstName, String lastName, String email) {
        this.id = id;
        this.firstName = firstName;
        this.lastName = lastName;
        this.email = email;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getFirstName() {
        return firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    public String getLastName() {
        return lastName;
    }

    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }
}
```

Filename: "CustomerController.java"
```java
package learn.springboot.whatspringboot.v13.web;


import jakarta.annotation.Resource;
import learn.springboot.whatspringboot.v13.dto.CustomerData;
import learn.springboot.whatspringboot.v13.service.CustomerService;
import org.springframework.web.bind.annotation.*;

import java.util.*;

@RestController
@RequestMapping("/customers")
public class CustomerController {



    @Resource(name = "customerService")
    private CustomerService customerService;


    @GetMapping
    public List <CustomerData> getCustomers() {
        return customerService.getAllCustomers();
    }


}

```

Filename: "StudentsController.java"
```java
package learn.springboot.whatspringboot.v13.web;

import learn.springboot.whatspringboot.v12.service.Coach;
import learn.springboot.whatspringboot.v13.dao.StudentDAO;
import learn.springboot.whatspringboot.v13.entity.Student;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import  java.util.*;


@RestController
@RequestMapping("/students")
public class StudentsController {

    private final StudentDAO theStudentDAO;

    @Autowired
    public StudentsController(StudentDAO theStudentDAO) {
        this.theStudentDAO=theStudentDAO;
    }

    @GetMapping("/all")
    public List<Student> getDailyWorkout() {
        return  null; //theStudentDAO.();
    }


}

```

Filename: "StudentDAO.java"
```java
package learn.springboot.whatspringboot.v13.dao;

import learn.springboot.whatspringboot.v13.entity.Student;

public interface StudentDAO {

    void save(Student theStudent);
}

```

Filename: "CustomerRepository.java"
```java
package learn.springboot.whatspringboot.v13.dao;

import learn.springboot.whatspringboot.v13.entity.Customer;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.repository.CrudRepository;
import org.springframework.stereotype.Repository;

@Repository
public interface CustomerRepository extends JpaRepository<Customer,Long> { }
```

Filename: "CustomerService.java"
```java
package learn.springboot.whatspringboot.v13.service;

import learn.springboot.whatspringboot.v13.dto.CustomerData;

import java.util.*;

public interface CustomerService {
    CustomerData save(CustomerData customer);

    List <CustomerData> getAllCustomers();
}

```

Filename: "StudentDAOImpl.java"
```java
package learn.springboot.whatspringboot.v13.daoImpl;

import jakarta.persistence.EntityManager;
import learn.springboot.whatspringboot.v13.dao.StudentDAO;
import learn.springboot.whatspringboot.v13.entity.Student;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;


@Repository
public class StudentDAOImpl  implements StudentDAO {

    EntityManager entityManager;

    @Autowired
    public StudentDAOImpl(EntityManager entityManager) {
        this.entityManager = entityManager;
    }

    @Override
    @Transactional
    public void save(Student theStudent) {
        entityManager.persist(theStudent);
    }
}

```

Filename: "UserDao.java"
```java
package learn.springboot.whatspringboot.v02.dao;public class UserDao {
}

```

Filename: "DatabaseUtil.java"
```java
package learn.springboot.whatspringboot.v02.config;





import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;

public class DatabaseUtil {

    private static final String JDBC_URL = "jdbc:mysql://172.18.0.10:3306/student_tracker";
    private static final String USER = "springstudent";
    private static final String PASSWORD = "springstudent";

    public static Connection getConnection() throws SQLException {
        return DriverManager.getConnection(JDBC_URL, USER, PASSWORD);
    }

    public static void closeConnection(Connection connection) {
        if (connection != null) {
            try {
                connection.close();
            } catch (SQLException e) {
            }
        }
    }
}





```

Filename: "Student.java"
```java
package learn.springboot.whatspringboot.v01.mvc.entity;

public class Student {
    private int id;
    private String firstName;
    private String lastName;
    private String email;


    public int getId() {
        return id;
    }

    public String getFirstName() {
        return firstName;
    }

    public String getLastName() {
        return lastName;
    }

    public String getEmail() {
        return email;
    }

    public void setId(int id) {
        this.id = id;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public Student() {
    }

    public Student(String firstName, String lastName, String email) {
        this.firstName = firstName;
        this.lastName = lastName;
        this.email = email;
    }

    @Override
    public String toString() {
        return "Student{" +
                "id=" + id +
                ", firstName='" + firstName + '\'' +
                ", lastName='" + lastName + '\'' +
                ", email='" + email + '\'' +
                '}';
    }
}


```

Filename: "StudentListAppREST.java"
```java
package learn.springboot.whatspringboot.v01.mvc.web;


import com.sun.net.httpserver.HttpServer;
import com.sun.net.httpserver.HttpHandler;
import com.sun.net.httpserver.HttpExchange;


import java.io.IOException;
import java.io.OutputStream;
import java.net.InetSocketAddress;
import java.util.List;

import learn.springboot.whatspringboot.v01.mvc.service.StudentController;
import learn.springboot.whatspringboot.v01.mvc.entity.Student;



public class StudentListAppREST {
    public static void main(String[] args) throws IOException {
        HttpServer server = HttpServer.create(new InetSocketAddress(7171), 0);
        server.createContext("/students", new StudentsHandler());
        server.setExecutor(null); // creates a default executor
        server.start();

        System.out.println("RESTful endpoints are running: (not working)");
        System.out.println("GET http://172.18.0.17:7171/students");
    }

    static class StudentsHandler implements HttpHandler {
        private StudentController studentController = new StudentController();

        @Override
        public void handle(HttpExchange exchange) throws IOException {
            if ("GET".equals(exchange.getRequestMethod())) {
                List<Student> students = studentController.getAllStudents();
                String response = students.toString(); // Convert list to JSON or XML

                exchange.sendResponseHeaders(200, response.length());
                OutputStream os = exchange.getResponseBody();
                os.write(response.getBytes());
                os.close();
            }
        }
    }
}




```

Filename: "StudentListAppMVC.java"
```java
package learn.springboot.whatspringboot.v01.mvc.web;

import learn.springboot.whatspringboot.v01.mvc.entity.Student;
import learn.springboot.whatspringboot.v01.mvc.service.StudentController;

import java.util.List;

public class StudentListAppMVC {

    public static void main(String[] args) {
        StudentController studentController = new StudentController();
        List<Student> students = studentController.getAllStudents();


        System.out.println(students.get(1).toString());
        System.out.println(students.get(2).toString());

    }
}

```

Filename: "StudentDAO.java"
```java
package learn.springboot.whatspringboot.v01.mvc.dao;

import learn.springboot.whatspringboot.v01.mvc.entity.Student;

import java.util.List;

public class StudentDAO {
    public List<Student> getAllStudents() {
        return null;
    }
}

```

Filename: "StudentController.java"
```java
package learn.springboot.whatspringboot.v01.mvc.service;

import learn.springboot.whatspringboot.v01.mvc.dao.StudentDAO;
import learn.springboot.whatspringboot.v01.mvc.entity.Student;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

public class StudentController {

    private static final String JDBC_URL = "jdbc:mysql://localhost:3306/student_tracker";
    private static final String USER = "abc";
    private static final String PASSWORD = "abc";

    public List<Student> getAllStudents() {
        List<Student> students = new ArrayList<>();

        try (Connection connection = DriverManager.getConnection(JDBC_URL, USER, PASSWORD);
             PreparedStatement statement = connection.prepareStatement("SELECT * FROM student");
             ResultSet resultSet = statement.executeQuery()) {

            while (resultSet.next()) {
                Student student = new Student();
                student.setId(resultSet.getInt("id"));
                student.setFirstName(resultSet.getString("first_name"));
                student.setLastName(resultSet.getString("last_name"));
                student.setEmail(resultSet.getString("email"));
                students.add(student);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

        return students;
    }
}

```

Filename: "StudentListAppV2.java"
```java
package learn.springboot.whatspringboot.v01.app;


import java.io.IOException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Properties;

public class StudentListAppV2 {

    public static void main(String[] args) {
        Properties properties = loadProperties("v01.properties");

        String jdbcUrl = properties.getProperty("spring.datasource.url");
        String user = properties.getProperty("spring.datasource.username");
        String password = properties.getProperty("spring.datasource.password");

        try {
            Connection connection = DriverManager.getConnection(jdbcUrl, user, password);

            String sql = "SELECT * FROM student";
            PreparedStatement statement = connection.prepareStatement(sql);

            ResultSet resultSet = statement.executeQuery();

            while (resultSet.next()) {
                int id = resultSet.getInt("id");
                String firstName = resultSet.getString("first_name");
                String LastName = resultSet.getString("last_name");
                String email = resultSet.getString("email");
                System.out.println("ID: " + id + ", Name: " + firstName + " "+LastName+ ", email: " + email);
            }

            resultSet.close();
            statement.close();
            connection.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private static Properties loadProperties(String filename) {
        Properties properties = new Properties();
        try (InputStream inputStream = StudentListApp.class.getClassLoader().getResourceAsStream(filename)) {
            properties.load(inputStream);
        } catch (IOException e) {
            e.printStackTrace();
        }
        return properties;
    }
}

```

Filename: "StudentListApp.java"
```java
package learn.springboot.whatspringboot.v01.app;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

public class StudentListApp {

    public static void main(String[] args) {
        String jdbcUrl = "jdbc:mysql://172.18.0.10:3306/student_tracker";
        String user = "springstudent";
        String password = "springstudent";

        try {
            Connection connection = DriverManager.getConnection(jdbcUrl, user, password);

            String sql = "SELECT * FROM customer";
            PreparedStatement statement = connection.prepareStatement(sql);

            ResultSet resultSet = statement.executeQuery();

            while (resultSet.next()) {
                int id = resultSet.getInt("id");
                String firstName = resultSet.getString("first_name");
                String LastName = resultSet.getString("last_name");
                String email = resultSet.getString("email");
                System.out.println("ID: " + id + ", Name: " + firstName + " "+LastName+ ", email: " + email);
            }

            resultSet.close();
            statement.close();
            connection.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}

```

Filename: "pom.xml"
```xml
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.0.5</version>
	</parent>
	<groupId>learn.springboot</groupId>
	<artifactId>what-hibernate</artifactId>
	<version>13.0.0</version>
	<name>crud-hibernate</name>
	<description>Demo project for Spring Boot</description>
	<properties>
		<java.version>1.8</java.version>
	</properties>
	<dependencies>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>


		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>







    </dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
```

Filename: "v13.properties"
```properties
management.endpoints.web.exposure.include=*
management.info.env.enabled=false
info.app.name=My Learning App
info.app.description=My Learning App for Spring Boot
info.app.version=11.0.0
server.port=7070
server.servlet.context-path=/app13/jpa
spring.main.lazy-initialization=false
-Dlogging.level.learn.springboot.whatspringboot=TRACE
spring.datasource.url=jdbc:mysql://172.18.0.10:3306/student_tracker
spring.datasource.username=springstudent
spring.datasource.password=springstudent
spring.jpa.show-sql=true
spring.main.banner-mode=off
logging.level.root=WARN
```

Filename: "v01.properties"
```properties
spring.datasource.url=jdbc:mysql://172.18.0.10:3306/student_tracker
spring.datasource.username=springstudent
spring.datasource.password=springstudent
server.port=7070

```

Filename: "v14.properties"
```properties
management.endpoints.web.exposure.include=*
management.info.env.enabled=false
info.app.name=My Learning App
info.app.description=My Learning App for Spring Boot
info.app.version=11.0.0
server.port=7070
server.servlet.context-path=/app14
spring.main.lazy-initialization=false
-Dlogging.level.learn.springboot.whatspringboot=TRACE
spring.datasource.url=jdbc:mysql://172.18.0.10:3306/student_tracker
spring.datasource.username=springstudent
spring.datasource.password=springstudent
spring.jpa.show-sql=true
spring.main.banner-mode=off
logging.level.root=WARN
```

Filename: "application.properties"
```properties

```

Filename: "v12.properties"
```properties
management.endpoints.web.exposure.include=*
management.info.env.enabled=false
info.app.name=My Learning App
info.app.description=My Learning App for Spring Boot
info.app.version=12.0.0
server.port=7070
server.servlet.context-path=/basic12/rest
spring.main.lazy-initialization=true
-Dlogging.level.learn.springboot.whatspringboot=TRACE
spring.main.banner-mode=off
logging.level.root=WARN
```

Filename: "v13.properties"
```properties
management.endpoints.web.exposure.include=*
management.info.env.enabled=false
info.app.name=My Learning App
info.app.description=My Learning App for Spring Boot
info.app.version=11.0.0
server.port=7070
server.servlet.context-path=/app13/jpa
spring.main.lazy-initialization=false
-Dlogging.level.learn.springboot.whatspringboot=TRACE
spring.datasource.url=jdbc:mysql://172.18.0.10:3306/student_tracker
spring.datasource.username=springstudent
spring.datasource.password=springstudent
spring.jpa.show-sql=true
spring.main.banner-mode=off
logging.level.root=WARN
```

Filename: "v01.properties"
```properties
spring.datasource.url=jdbc:mysql://172.18.0.10:3306/student_tracker
spring.datasource.username=springstudent
spring.datasource.password=springstudent
server.port=7070

```

Filename: "v14.properties"
```properties
management.endpoints.web.exposure.include=*
management.info.env.enabled=false
info.app.name=My Learning App
info.app.description=My Learning App for Spring Boot
info.app.version=11.0.0
server.port=7070
server.servlet.context-path=/app14
spring.main.lazy-initialization=false
-Dlogging.level.learn.springboot.whatspringboot=TRACE
spring.datasource.url=jdbc:mysql://172.18.0.10:3306/student_tracker
spring.datasource.username=springstudent
spring.datasource.password=springstudent
spring.jpa.show-sql=true
spring.main.banner-mode=off
logging.level.root=WARN
```

Filename: "application.properties"
```properties

```

Filename: "v12.properties"
```properties
management.endpoints.web.exposure.include=*
management.info.env.enabled=false
info.app.name=My Learning App
info.app.description=My Learning App for Spring Boot
info.app.version=12.0.0
server.port=7070
server.servlet.context-path=/basic12/rest
spring.main.lazy-initialization=true
-Dlogging.level.learn.springboot.whatspringboot=TRACE
spring.main.banner-mode=off
logging.level.root=WARN
```

